@use 'sass:math';

@mixin clearfix() {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin hover {
  &:hover {
    @content;
  }
}

@mixin hover-focus {
  &:focus {
    @content;
  }
  @include hover {
    @content;
  }
}

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

@mixin vendor-prefixes($property, $value) {
  -webkit-#{$property}: $value;
  -moz-#{$property}: $value;
  -ms-#{$property}: $value;
  -o-#{$property}: $value;
  #{$property}: $value;
}

/// Vertically centers the element inside of its first non-static parent,
/// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
@mixin vertical-center {
  position: absolute;
  top: 50%;
  @include vendor-prefixes(transform, translateY(-50%));
}

/// Horizontally centers the element inside of its first non-static parent,
/// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
@mixin horizontal-center {
  position: absolute;
  left: 50%;
  @include vendor-prefixes(transform, translateX(-50%));
}

/// Vertically centers the element inside of its first non-static parent,
/// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
@mixin vertical-center {
  position: absolute;
  top: 50%;
  @include vendor-prefixes(transform, translateY(-50%));
}

/// Horizontally centers the element inside of its first non-static parent,
/// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
@mixin horizontal-center {
  position: absolute;
  left: 50%;
  @include vendor-prefixes(transform, translateX(-50%));
}

/// Absolutely centers the element inside of its first non-static parent,
/// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  @include vendor-prefixes(transform, translate(-50%, -50%));
}

// calculate padding from aspect ratio
@mixin set-aspect-ratio($width, $height) {
  padding-top: 100% * ($height/$width);
}

@mixin hyphens() {
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
}

@function get-direction($direction) {
  $direction-map: (
    'left': 'to right',
    'right': 'to left',
    'bottom': 'to top',
    'top': 'to bottom',
  );

  @if map-has-key($direction-map, $direction) {
    @return map-get($direction-map, $direction);
  }
  @return $direction;
}

@mixin linear-gradient(
  $direction: left,
  $color-from: #000000,
  $color-to: #ffffff,
  $gradient-type: 0
) {
  background-image: -moz-linear-gradient(
    $direction,
    rgba($color-from, 0.6) 0%,
    rgba($color-to, 0) 100%
  );
  background-image: -webkit-linear-gradient(
    $direction,
    rgba($color-from, 0.6) 0%,
    rgba($color-to, 0) 100%
  );
  background-image: linear-gradient(
    get-direction($direction),
    rgba($color-from, 0.6) 0%,
    rgba($color-to, 0) 100%
  );
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=#{$gradient-type}, StartColorStr=#{$color-from}, EndColorStr=#{$color-to});
}
@mixin ellipsis($display: inline-block) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  max-width: 100%;
  display: $display;
}
@mixin object-fit-cover {
  object-fit: cover;
  width: 100%;
  height: 100%;
}

@function toRem($value) {
  $remValue: math.div($value, 16) + rem;
  @return $remValue;
}
// --------------------------------------------------------------------- Functions
@function calculateWidthPercentage($width-section, $width-actual) {
  @return math.percentage(math.div($width-section, $width-actual));
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::placeholder {
    @content;
  }
}
@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') {
    @content;
  }
  @include optional-at-root(':-moz-placeholder') {
    @content;
  }
  @include optional-at-root('::-moz-placeholder') {
    @content;
  }
  @include optional-at-root(':-ms-input-placeholder') {
    @content;
  }
  @include optional-at-root('::-ms-input-placeholder') {
    @content;
  }
  @include optional-at-root('::placeholder') {
    @content;
  }
}
@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') {
    @content;
  }

  @include optional-at-root(':-moz-placeholder') {
    @content;
  }

  @include optional-at-root('::-moz-placeholder') {
    @content;
  }

  @include optional-at-root(':-ms-input-placeholder') {
    @content;
  }
}

@mixin change-auto-fill {
  //@include optional-at-root(':-webkit-autofill') {
  //  @content;
  //}
  //@include optional-at-root(':-webkit-autofill:hover') {
  //  @content;
  //}
  //@include optional-at-root(':-webkit-autofill:focus') {
  //  @content;
  //}
  &:-webkit-autofill,
  &:-webkit-autofill:hover,
  &:-webkit-autofill:focus {
    @content;
  }
}

@mixin phones-fit {
  @supports (padding: max(0px)) {
    ///* iOS 11 */
    //padding-left: constant(safe-area-inset-left);
    //padding-right: constant(safe-area-inset-right);

    /* iOS 11.2+ */
    padding-left: env(safe-area-inset-left);
    padding-right: env(safe-area-inset-right);
  }
}

@mixin phones-fit-max-evn($max) {
  @supports (padding: max(0px)) {
    padding-left: max(#{$max}, env(safe-area-inset-left));
    padding-right: max(#{$max}, env(safe-area-inset-right));
  }
}

@mixin ripple-effect(
  $effect-first-color,
  $effect-second-color,
  $delay,
  $function
) {
  background-position: center;
  transition: background $delay $function;
  -webkit-transition: background $delay $function;

  &:hover {
    background: var(--ripple-effect-first-color, $effect-first-color)
      radial-gradient(
        circle,
        transparent 1%,
        var(--ripple-effect-second-color, $effect-second-color) 1%
      )
      center/15000%;
  }

  &:active {
    background-color: var(--ripple-effect-first-color, $effect-first-color);
    background-size: 100%;
    transition: background 0s;
    -webkit-transition: background 0s;
  }
}
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}
@mixin ripple-effect-not-vars(
  $effect-first-color,
  $effect-second-color,
  $delay,
  $function
) {
  background-position: center;
  transition: background $delay $function;
  -webkit-transition: background $delay $function;

  &:hover {
    background: $effect-first-color
      radial-gradient(circle, transparent 1%, $effect-second-color 1%)
      center/15000%;
  }

  &:active {
    background-color: $effect-first-color;
    background-size: 100%;
    transition: background 0s;
  }
}

@mixin linkShadow {
  filter: drop-shadow(0px 0px 0.5px rgba(0, 0, 0, 0.6));
}

@mixin linkHover($color) {
  filter: drop-shadow(0px 0px 5px rgba($color, 0));
  transition: 300ms ease;
  &:hover {
    filter: drop-shadow(0px 0px 0.5px rgba($color, 0.6));
  }
}

@mixin landscape {
  @media screen and (orientation: landscape) {
    @content;
  }
}

@mixin selection_Dark {
  ::-moz-selection {
    background: $translucentWhite;
    color: black;
  }
  ::selection {
    background: $translucentWhite;
    color: black;
  }
}

@mixin selection_Light {
  ::-moz-selection {
    background: $translucentBlack;
    color: white;
  }
  ::selection {
    background: $translucentBlack;
    color: white;
  }
}

@mixin selection_Invisible {
  ::-moz-selection {
    background: transparent;
    color: transparent;
  }
  ::selection {
    background: transparent;
    color: transparent;
  }
}

// https://codepen.io/jakob-e/pen/yVyYzv
// https://ryanfeigenbaum.com/easy-responsive-typography/
